name: Web Flash (from IDF Build artifact)

on:
  workflow_run:
    workflows: ["IDF Build (ESP32-P4)"]
    types: [completed]

jobs:
  publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      pages: write
      id-token: write

    steps:
      - name: Download build artifact from triggering run
        uses: actions/download-artifact@v5
        with:
          # We named the artifact with the build run_id in the IDF workflow
          name: tab5-build
          # v5 supports cross-run downloads when given run-id & token/permissions
          run-id: ${{ github.event.workflow_run.id }}
          path: _dl

      - name: Set up Python and install esptool
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: python -m pip install --upgrade pip esptool

      - name: Merge firmware (ESP-IDF v4+ requires single merged file for Web Tools)
        working-directory: _dl/platforms/tab5/build
        run: |
          mkdir -p ../../../site
          # Use the exact flash layout created by the build:
          python -m esptool --chip esp32p4 merge_bin \
            -o ../../../site/firmware-merged.bin \
            "@flash_args"

      - name: Create ESP Web Tools manifest
        working-directory: _dl/site
        run: |
          VER="${{ github.event.workflow_run.run_number }}"
          cat > manifest.json << 'JSON'
          {
            "name": "M5Tab5 User Demo",
            "version": "R${{ github.event.workflow_run.run_number }}",
            "builds": [{
              "chipFamily": "ESP32",
              "parts": [
                { "path": "firmware-merged.bin", "offset": 0 }
              ]
            }]
          }
          JSON

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _dl/site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
